@model ECommerceApplication.Models.Product

@* <link rel="stylesheet" href="~/css/CatelogStyle.css" /> *@

<style>
    body {
        font-family: 'Inter', system-ui, sans-serif;
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        margin: 0;
        padding: 0;
        min-height: 100vh;
    }

    .form-wrapper {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 40px 20px;
    }

    .form-container {
        background: white;
        border-radius: 24px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        width: 100%;
        max-width: 800px;
        overflow: hidden;
    }

    .form-header {
        background: linear-gradient(135deg, #10b981, #059669);
        padding: 40px;
        text-align: center;
        color: white;
    }

    .form-icon {
        font-size: 48px;
        margin-bottom: 16px;
    }

    .form-title {
        font-size: 32px;
        font-weight: 800;
        margin: 0;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .form-subtitle {
        font-size: 14px;
        margin-top: 8px;
        opacity: 0.9;
    }

    .form-body {
        padding: 40px;
    }

    .product-preview {
        display: flex;
        gap: 24px;
        padding: 24px;
        background: #f8fafc;
        border-radius: 16px;
        margin-bottom: 32px;
        align-items: center;
    }

    .preview-image {
        width: 140px;
        height: 140px;
        border-radius: 12px;
        background: white;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        flex-shrink: 0;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .preview-image img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
    }

    .preview-details {
        flex: 1;
    }

    .preview-title {
        font-size: 22px;
        font-weight: 700;
        color: #0f172a;
        margin: 0 0 16px 0;
        line-height: 1.3;
    }

    .preview-specs {
        display: flex;
        gap: 24px;
        flex-wrap: wrap;
    }

    .preview-spec {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

    .spec-label {
        font-size: 11px;
        color: #64748b;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .spec-value {
        font-size: 16px;
        font-weight: 700;
        color: #0f172a;
    }

    .form-section {
        margin-bottom: 32px;
    }

    .section-title {
        font-size: 16px;
        font-weight: 700;
        color: #0f172a;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 20px;
        padding-bottom: 12px;
        border-bottom: 2px solid #e2e8f0;
    }

    .quantity-input-wrapper {
        display: flex;
        align-items: center;
        gap: 16px;
        background: #f8fafc;
        padding: 24px;
        border-radius: 16px;
        border: 2px solid #e2e8f0;
    }

    .quantity-label {
        font-size: 14px;
        font-weight: 700;
        color: #334155;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        min-width: 100px;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        gap: 12px;
        flex: 1;
    }

    .quantity-btn {
        width: 44px;
        height: 44px;
        border: none;
        background: white;
        border-radius: 10px;
        font-size: 20px;
        font-weight: 700;
        color: #10b981;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    }

    .quantity-btn:hover {
        background: #10b981;
        color: white;
        transform: scale(1.1);
    }

    .quantity-input {
        width: 80px;
        padding: 12px;
        border: 2px solid #e2e8f0;
        border-radius: 10px;
        font-size: 18px;
        font-weight: 700;
        text-align: center;
        color: #0f172a;
        background: white;
    }

    .quantity-input:focus {
        outline: none;
        border-color: #10b981;
        box-shadow: 0 0 0 4px rgba(16, 185, 129, 0.1);
    }

    .hidden-inputs {
        display: none;
    }

    .form-actions {
        display: flex;
        gap: 12px;
        margin-top: 32px;
    }

    .btn {
        flex: 1;
        padding: 16px;
        border: none;
        border-radius: 12px;
        font-size: 15px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        text-decoration: none;
        text-align: center;
        display: inline-block;
    }

    .btn-primary {
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        box-shadow: 0 4px 16px rgba(16, 185, 129, 0.4);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 24px rgba(16, 185, 129, 0.5);
    }

    .btn-secondary {
        background: white;
        color: #10b981;
        border: 2px solid #10b981;
    }

    .btn-secondary:hover {
        background: #f8fafc;
    }

    .price-preview {
        background: linear-gradient(135deg, #d1fae5, #a7f3d0);
        padding: 20px;
        border-radius: 12px;
        margin-top: 24px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .price-label {
        font-size: 14px;
        font-weight: 700;
        color: #065f46;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .price-value {
        font-size: 28px;
        font-weight: 900;
        color: #064e3b;
    }

    .info-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: #d1fae5;
        color: #065f46;
        padding: 10px 16px;
        border-radius: 10px;
        font-size: 13px;
        font-weight: 600;
        margin-bottom: 24px;
    }

    @@media (max-width: 768px) {
        .form-container {
            border-radius: 0;
            min-height: 100vh;
        }

        .form-header {
            padding: 32px 24px;
        }

        .form-title {
            font-size: 24px;
        }

        .form-body {
            padding: 24px;
        }

        .product-preview {
            flex-direction: column;
            text-align: center;
        }

        .preview-specs {
            justify-content: center;
        }

        .quantity-input-wrapper {
            flex-direction: column;
            align-items: stretch;
        }

        .quantity-label {
            text-align: center;
        }

        .form-actions {
            flex-direction: column;
        }
    }
</style>

<div class="form-wrapper">
    <div class="form-container">
        <div class="form-header">
            <div class="form-icon">ðŸ›’</div>
            <h1 class="form-title">Add to Cart</h1>
            <p class="form-subtitle">Select quantity and add this item to your cart</p>
        </div>

        <div class="form-body">
            <div class="info-badge">
                âœ“ Item will be added to your shopping cart
            </div>

            <div class="product-preview">
                <div class="preview-image">
                    <img src="@Model.ProductImage" alt="@Model.ProductTitle" />
                </div>
                <div class="preview-details">
                    <h2 class="preview-title">@Model.ProductTitle</h2>
                    <div class="preview-specs">
                        <div class="preview-spec">
                            <span class="spec-label">Product ID</span>
                            <span class="spec-value">#@Model.ProductId</span>
                        </div>
                        <div class="preview-spec">
                            <span class="spec-label">Unit Price</span>
                            <span class="spec-value">â‚¹@Model.UnitPrice.ToString("N2")</span>
                        </div>
                    </div>
                </div>
            </div>

            <form action="/ShoppingCart/insert/" method="post">
                <div class="hidden-inputs">
                    <input type="hidden" name="id" value="@Model.ProductId" />
                    <input type="hidden" name="title" value="@Model.ProductTitle" />
                    <input type="hidden" name="img" value="@Model.ProductImage" />
                    <input type="hidden" name="unitprice" value="@Model.UnitPrice" />
                </div>

                <div class="form-section">
                    <h3 class="section-title">Select Quantity</h3>
                    <div class="quantity-input-wrapper">
                        <span class="quantity-label">Quantity</span>
                        <div class="quantity-controls">
                            <button type="button" class="quantity-btn" onclick="decrementQuantity()">âˆ’</button>
                            <input type="number" id="quantityInput" name="quantity" value="1" min="1" max="99" class="quantity-input" required />
                            <button type="button" class="quantity-btn" onclick="incrementQuantity()">+</button>
                        </div>
                    </div>

                    <div class="price-preview">
                        <span class="price-label">Total Price</span>
                        <span class="price-value" id="totalPrice">â‚¹@Model.UnitPrice.ToString("N2")</span>
                    </div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="history.back()">Cancel</button>
                    <button type="submit" class="btn btn-primary" name="btn" value="Insert">Add to Cart</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    const unitPrice = @Model.UnitPrice;
    const quantityInput = document.getElementById('quantityInput');
    const totalPrice = document.getElementById('totalPrice');

    function updateTotal() {
        const quantity = parseInt(quantityInput.value) || 1;
        const total = unitPrice * quantity;
        totalPrice.textContent = 'â‚¹' + total.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }

    function incrementQuantity() {
        const currentValue = parseInt(quantityInput.value) || 1;
        if (currentValue < 99) {
            quantityInput.value = currentValue + 1;
            updateTotal();
        }
    }

    function decrementQuantity() {
        const currentValue = parseInt(quantityInput.value) || 1;
        if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
            updateTotal();
        }
    }

    quantityInput.addEventListener('input', updateTotal);
    quantityInput.addEventListener('change', function() {
        if (this.value < 1) this.value = 1;
        if (this.value > 99) this.value = 99;
        updateTotal();
    });
</script>